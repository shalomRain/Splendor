function shuffleArray(e){for(let a=e.length-1;a>0;a--){const r=Math.floor(Math.random()*(a+1));[e[a],e[r]]=[e[r],e[a]]}return e}const clickSelector=(e,a)=>{$("body").on("click",e,a)};function checkAlignment(e){if(e.length<2)return!0;const a=e.map((e=>e.split("-").map(Number))),r=[...a].sort(((e,a)=>e[0]===a[0]?e[1]-a[1]:e[0]-a[0])),l=[...a].sort(((e,a)=>e[1]===a[1]?e[0]-a[0]:e[1]-a[1])),m=r.every(((e,a,r)=>0===a||e[0]===r[a-1][0]&&e[1]===r[a-1][1]+1)),i=l.every(((e,a,r)=>0===a||e[1]===r[a-1][1]&&e[0]===r[a-1][0]+1)),t=checkDiagonal(r,1),n=checkDiagonal(r,-1);return m||i||t||n}function checkDiagonal(e,a){return e.every(((e,r,l)=>0===r||e[0]===l[r-1][0]+1&&e[1]===l[r-1][1]+a))}const getGemType={GETBOARD:1,GETPLAYER:2},selectAction={OPTIONAL:1,COERCION:2,ABANDON:3},cards=[{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:1,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:3,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:4},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:5},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:4},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:4},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:5},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:5},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:4},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:2},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:5},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:2},spend:[{gemType:"diamond",gemValue:5},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:5,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:0,crown:2,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:0,crown:2,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:5},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:6},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:5},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:5},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:6},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:5},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:5},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:6},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:0,crown:3,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:8},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:0,skill:"again",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:8},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:6,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:8},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]}],idCards=cards.map(((e,a)=>({...e,id:a<9?`card-0${a+1}`:`card-${a+1}`}))),firstCards=shuffleArray(idCards.filter((e=>"first"===e.level))),secondCards=shuffleArray(idCards.filter((e=>"second"===e.level))),thirdCards=shuffleArray(idCards.filter((e=>"third"===e.level))),markersId=[{id:"marker-01",gemType:"framesite"},{id:"marker-02",gemType:"framesite"},{id:"marker-03",gemType:"framesite"},{id:"marker-04",gemType:"framesite"},{id:"marker-05",gemType:"ruby"},{id:"marker-06",gemType:"ruby"},{id:"marker-07",gemType:"ruby"},{id:"marker-08",gemType:"ruby"},{id:"marker-09",gemType:"sapphire"},{id:"marker-10",gemType:"sapphire"},{id:"marker-11",gemType:"sapphire"},{id:"marker-12",gemType:"sapphire"},{id:"marker-13",gemType:"emerald"},{id:"marker-14",gemType:"emerald"},{id:"marker-15",gemType:"emerald"},{id:"marker-16",gemType:"emerald"},{id:"marker-17",gemType:"diamond"},{id:"marker-18",gemType:"diamond"},{id:"marker-19",gemType:"diamond"},{id:"marker-20",gemType:"diamond"},{id:"marker-21",gemType:"gold"},{id:"marker-22",gemType:"gold"},{id:"marker-23",gemType:"gold"},{id:"marker-24",gemType:"pearl"},{id:"marker-25",gemType:"pearl"}];let boardMarkers=Array.from({length:25},(e=>{}));const bank={markersId:[...markersId],cards:{first:[...firstCards],second:[...secondCards],third:[...thirdCards]},royalCards:[{id:"royal-01",reputation:3,skill:""},{id:"royal-02",reputation:2,skill:"steal"},{id:"royal-03",reputation:2,skill:"again"},{id:"royal-04",reputation:2,skill:"privilege"}],privilege:2},initShowCardNumber={first:5,second:4,third:3};let abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0};const playerList=[{reputation:0,crown:0,privilege:0,gems:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},reputations:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},cards:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},markersId:[],royalCards:[],preCards:[]},{reputation:0,crown:0,privilege:1,gems:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},reputations:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},cards:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},markersId:[],royalCards:[],preCards:[]}],showEnum={diamond:"白",sapphire:"蓝",emerald:"绿",ruby:"红",framesite:"黑",gold:"金",pearl:"粉"},allLevel=[...new Set(cards.map((e=>e.level)))],ruleLimitGem=3,ruleGoldLimitGem=1,ruleLimitCard=3,ruleLimitMarker=10;let usePrivilege=!1,usePlayer=1,pickingGem=!1,prePurchase=!1,buying=!1,chooseCardType=!1,isSkillStealing=!1,isAbandonGem=!1,isPickRoyal=!1,isBuyPreCard=!1,chooseGemType="",stopRoyalDrawer=!1,curPickGemIds=[],curPickCards=[];function handleSelectGem(e,a){const r=$(e).attr("id");if($(e).toggleClass("picked").hasClass("picked")?curPickGemIds.push(r):curPickGemIds=curPickGemIds.filter((e=>e!==r)),curPickGemIds.length>a){const e=curPickGemIds.splice(0,1);$(`#${e}`).removeClass("picked")}}function handleSelectCard(e){const a=$(e).attr("id");$(e).toggleClass("picked").hasClass("picked")?curPickCards.push(a):curPickCards=curPickCards.filter((e=>e!==a))}function handleRemoveCard(){if(!curPickCards.length)return;const e=curPickCards[0],a=idCards.find((a=>a.id===e)).level,r=bank.cards[a],l=r.findIndex((a=>a.id===e));if(-1!==l&&l<=initShowCardNumber[a]&&(r[l]=r.pop()),isBuyPreCard){const a=playerList[usePlayer-1].preCards.indexOf(e);-1!==a&&playerList[usePlayer-1].preCards.splice(a,1),isBuyPreCard=!1}initLevelCards(a)}function togglePlayer(e=!0){e&&(usePlayer=1===usePlayer?2:1),renderPlayerView(),selectRound(selectAction.OPTIONAL)}const getPlayerInfo=e=>e?playerList[usePlayer-1][e]:playerList[usePlayer-1],getRivalInfo=e=>e?playerList[1===usePlayer?1:0][e]:playerList[1===usePlayer?1:0];function getPlayerPrivilege(e,a){playerList[e].privilege<3&&(bank.privilege?bank.privilege-=1:playerList[a].privilege&&(playerList[a].privilege-=1),playerList[e].privilege+=1),renderPrivilege()}function showSpendGems(){renderShowCardsSpend([...playerList[usePlayer-1].preCards,...allLevel.flatMap((e=>$(`#${e}-cards .show-cards .card`).map(((e,a)=>$(a).attr("id"))).get()))])}function computedBuyCardSpend(e){const a=idCards.find((a=>a.id===e)).spend,r=playerList[usePlayer-1].gems,l=playerList[usePlayer-1].cards;let m="";const i={};for(const e in l)i[e]=0;a.forEach((e=>{const a=e.gemValue,m=l[e.gemType]||0,t=r[e.gemType];i[e.gemType]=m>=a?0:m+t>=a?a-m:m+t-a}));const t=Object.keys(i).every((e=>0===i[e])),n=Object.keys(i).every((e=>i[e]>=0)),s=Object.keys(i).filter((e=>i[e]>0)),g=Object.keys(i).filter((e=>i[e]<0));if(t)m="免费",$(`#${e} .spend-desc`).data("spendGems","free");else if(n)m=s.reduce(((e,a)=>e+`${i[a]}${showEnum[a]}`),"花"),$(`#${e} .spend-desc`).data("spendGems",i);else{let a=g.reduce(((e,a)=>e+i[a]),0);Math.abs(a)>r.gold?m=g.reduce(((e,a)=>e+`${Math.abs(i[a])}${showEnum[a]}`),"缺"):(m+=s.reduce(((e,a)=>e+`${i[a]}${showEnum[a]}`),"花"),m+=g.reduce(((e,a)=>e+(r[a]?`${r[a]}${showEnum[a]}`:"")),""),m+=`${Math.abs(a)}金`,$(`#${e} .spend-desc`).data("spendGems",{...i,gold:Math.abs(a)}))}$(`#${e} .spend-desc`).text(m),$(".spend-desc").css({visibility:"initial"})}function buyLogic(e){const a=curPickCards[0],r=idCards.find((e=>e.id===a));computedCardScore(r,$(`#${a} .spend-desc`).data("spendGems"),e),skillUse(r)}function computedCardScore(e,a,r){const l=getPlayerInfo();l.reputation+=e.reputation,l.crown+=e.crown,handleComputedPlayerCard(l,e,r),"free"!==a&&markersToBank(a),handlePlayerGemValue()}function markersToBank(e){const a=getPlayerInfo("markersId");Object.keys(e).forEach((r=>{const l=e[r];for(let e=0;e<l;e++){const e=a.findIndex((e=>e.gemType===r));if(-1!==e){const r=a.splice(e,1);bank.markersId.push(...r)}}}))}function skillUse(e){if("again"===e.skill)renderMessage("触发技能: 再次回合"),endOfTurn(!1);else if("privilege"===e.skill)renderMessage("触发技能: 获取特权"),getPrivilege(),endOfTurn();else if("acquire"===e.skill){const a=e.subtract.gemType;checkBoardGem(a)?(renderMessage("触发技能: 从棋盘上拿取相同颜色宝石",3e3),chooseGemType=a,$(".action").css({visibility:"hidden"})):(renderMessage("棋盘上无相同宝石拿取, 进入下一回合"),endOfTurn())}else if("steal"===e.skill){const e=getRivalInfo("gems");Object.keys(e).some((a=>"gold"!==a&&e[a]>0))?(renderMessage("触发技能: 拿取对手宝石"),isSkillStealing=!0,$(".action").css({visibility:"hidden"})):(renderMessage("对手无宝石可拿取，进入下一回合"),endOfTurn())}else endOfTurn()}function endOfTurn(e=!0){handleRemoveCard(),renderPlayer(),$(".spend-desc").css({visibility:"hidden"}),checkPlayerCrownCount(),isPickRoyal||($(".action").css({visibility:"initial"}),checkGameEnd(),togglePlayer(e))}function handleComputedPlayerCard(e,a,r){const l=r||a.subtract.gemType;l&&(e.cards[l]+=a.subtract.gemValue,e.reputations[l]+=a.reputation)}function checkRivalGetPrivilege(e){const a=e.map((e=>markersId.find((a=>e===a.id)).gemType));return 2===a.filter((e=>"pearl"===e)).length||3===a.length&&a.every((e=>e===a[0]))}function checkPlayerCrownCount(){const e=getPlayerInfo("crown"),a=getPlayerInfo("royalCards").length;2!==a&&3*(a+1)<=e&&(isPickRoyal=!0,toggleDrawer(!0),renderMessage("请选择一张贵族卡牌"))}function fillBoard(){shuffleArray(bank.markersId),boardMarkers.forEach(((e,a)=>{e||(boardMarkers[a]=bank.markersId.pop())})),renderBoardMarkers(boardMarkers)}function checkBoardGem(e){return boardMarkers.some((a=>a&&$(`#${a.id}`).attr("class").split(" ")[1]===e))}function playerGemTotalCount(){const e=getPlayerInfo("gems");return Object.keys(e).reduce(((a,r)=>a+e[r]),0)}function handlePlayerGemValue(){const e={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0};getPlayerInfo("markersId").forEach((a=>{e[a.gemType]+=1})),getPlayerInfo().gems=e;const a={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0};getRivalInfo("markersId").forEach((e=>{a[e.gemType]+=1})),getRivalInfo().gems=a}function checkOtherAction(){return chooseGemType||isSkillStealing||chooseCardType||isPickRoyal}function checkCoercionAction(e){if($(e).hasClass("picked")||checkOtherAction())return!0;resetStatus(e)}function resetStatus(e){curPickCards=[],curPickGemIds=[],pickingGem=!1,prePurchase=!1,buying=!1,$(".spend-desc").css({visibility:"hidden"}),renderPicked(e)}function checkGameEnd(){const e=getPlayerInfo();if(e.reputation>=20)renderMessage("游戏结束，声望达到20分"),renderGameOver();else if(e.crown>=10)renderMessage("游戏结束，皇冠达到10个"),renderGameOver();else{Object.values(e.reputations).some((e=>e>=10))&&(renderMessage("游戏结束，同色卡牌声望达到10分"),renderGameOver())}}function checkCurGemsRule(){return checkAlignment(curPickGemIds.map((e=>$(`#${e}`).data("position"))))}function giveUpPrivilege(e){usePrivilege&&(renderMessage(e),usePrivilege=!1,$(".opt-privilege").removeClass("picked"))}function renderCards(e,a,r){let l=a>initShowCardNumber[e.level],m=a===initShowCardNumber[e.level];return`\n          <div id="${e.id}" class="card ${e.subtract.gemType?e.subtract.gemType:"common"} ${l?"hide-content":""} ${m?"pre-show":""} ${r||""}">\n              <div class="effect-image">\n                <div class="reputation ${e.skill?"":"short"}">\n                  <div class="reputation-value" style="visibility : ${e.reputation?"initial":"hidden"}">${e.reputation}</div>\n                  ${e.skill?`<div class="skill ${e.skill}"></div>`:""}\n                </div>\n                <div class="crown-container">\n                ${Array.from({length:e.crown}).map((a=>`<div class="${1===e.crown?"crown crown-only":"crown"}"></div>`)).join("")}\n                </div>\n                <div class="markers-container ${e.subtract.gemValue?"":"hidden"}">\n                  ${Array.from({length:e.subtract.gemValue}).map((e=>'<div class="marker"></div>')).join("")}\n                </div>\n              </div>\n              <div class="spend-desc"></div>\n              <div class="spend-value">\n                ${e.spend.map((e=>""+(e.gemValue?`<div class="player-gem ${e.gemType}">${e.gemValue}</div>`:""))).join("")}\n              </div> \n\n          </div>\n      `}function renderBoardMarkers(e){e.forEach(((e,a)=>{if(!e)return;const r=e.id,l=a<9?`cell-0${a+1}`:`cell-${a+1}`,m=$(`#${l}`),i=$(`#${r}`),t=m.offset(),n=m.outerWidth(),s=m.outerHeight(),g=t.left+n/2-20,p=t.top+s/2;i.css({left:g,top:p}),i.attr("position",l),i.data("position",m.data("position"))}))}function renderPlayer(){const e=playerList.map(((e,a)=>{const r=a+1;return`\n      <div class="player${r}">\n      <div class="player-score">\n    <div class="player-info">\n    <div class="player-name">玩家${r}</div>\n    <div class="score-container">\n      <div class="reputation">${e.reputation}</div>\n      <div class="crown">${e.crown}</div>\n      <div class="privilege">${e.privilege}</div>\n    </div>\n  </div>\n  <div class="player-reputation">\n    <span class="reputation-title">声望</span>\n    ${Object.keys(e.reputations).map((a=>`<div class="player-card ${a}">${e.reputations[a]}</div>`)).join("")}\n  </div>\n  <hr/>\n  <div class="player-cards">\n    <span class="cards-title">卡牌</span>\n    ${Object.keys(e.cards).map((a=>`<div class="player-card ${a}">${e.cards[a]}</div>`)).join("")}\n  </div>\n  <div class="player-gems">\n    <span class="gems-title">宝石</span>\n  ${Object.keys(e.gems).map((a=>`<div class="player-gem ${a}">${e.gems[a]}</div>`)).join("")}\n  </div>\n    </div>\n    <div class="player-pre-cards">\n    ${e.preCards.map((e=>{const a=idCards.find((a=>a.id===e));return renderCards(a,initShowCardNumber[a.level],a.level)})).join("")}\n    </div>\n  </div>`})).join("");$(".game-players").html(e)}function renderPlayerView(){$(".action .play-name").text(`玩家${usePlayer}`),$(".opt-fill").text(`补充棋盘(剩余宝石数：${bank.markersId.length})`)}const removePrivilege=()=>{playerList[usePlayer-1].privilege-=1,bank.privilege+=1,renderPrivilege()},getPrivilege=(e=!0)=>{e?getPlayerPrivilege(usePlayer-1,1===usePlayer?1:0):getPlayerPrivilege(1===usePlayer?1:0,usePlayer-1)},getGem=(e,a)=>{e===getGemType.GETBOARD?(removeBoard(a),curPickGemIds=[],$(".markers").removeClass("picked")):e===getGemType.GETPLAYER&&removePlayer()};function removeBoard(e){e.forEach((e=>{const a=e.attr("id");boardMarkers.forEach(((e,r)=>{e&&e.id===a&&(getPlayerInfo("markersId").push(boardMarkers[r]),boardMarkers[r]="")})),handlePlayerGemValue(),renderBoardMarkers(boardMarkers),renderPlayer(),e.attr("position",`player-${usePlayer}`)}))}function renderShowCardsSpend(e){e.forEach((e=>{computedBuyCardSpend(e)}))}function removePlayer(){}function selectRound(e){e===selectAction.OPTIONAL?($(".coercion-action").hide(),$(".abandon-action").hide(),$(".optional-action").css("display","flex"),$(".opt.last").show()):e===selectAction.COERCION?($(".optional-action").hide(),$(".abandon-action").hide(),$(".coercion-action").css("display","flex")):e===selectAction.ABANDON&&($(".optional-action").hide(),$(".coercion-action").hide(),$(".abandon-action").css("display","flex"))}function renderRoyal(){const e=bank.royalCards.map((e=>`\n  <div id="${e.id}" class="card royal-card">\n    <div class="effect-image">\n      <div class="reputation-value short">${e.reputation}</div>\n      <div class="skill ${e.skill}"></div>\n    </div>\n  </div>\n  `));$("#royal-cards").html(e)}function renderPrivilege(){const e=Array.from({length:bank.privilege}).map((e=>'<div class="privilege"></div>')).join("");$("#privilege-container").html(e)}function renderAbandonAction(){Object.keys(abandonGems).forEach((e=>{$(`.abandon-action .${e}`).text(abandonGems[e])}))}function renderMessage(e,a=3e3){$(".tips").text(e),$(".tips").show(),setTimeout((()=>{$(".tips").hide()}),a)}function renderPicked(e){$(".picked").removeClass("picked"),$(e).addClass("picked")}function renderGameOver(){$(".game-over").html(`<div class="game-text">恭喜玩家${usePlayer}，获胜！</div>`),$(".game-over").show(),startFireworks()}function toggleDrawer(e){const a=$(".drawer-container"),r=$(".drawer-btn");if(e||"matrix(1, 0, 0, 1, 0, 0)"!==a.css("transform")){a.css("transform","translateY(0)");var l=$(".drawer-content").outerHeight(!0);r.css("top",l+"px")}else closeDrawer()}function closeDrawer(){const e=$(".drawer-container"),a=$(".drawer-btn");e.css("transform","translateY(-100%)"),a.css("top","0px")}function startFireworks(){const e=document.querySelector(".game-over");new Fireworks.default(e,{autoresize:!0,opacity:.5,acceleration:1.05,friction:.97,gravity:1.5,particles:50,traceLength:3,traceSpeed:5,explosion:7,intensity:30,flickering:50,lineStyle:"round",hue:{min:0,max:360},delay:{min:30,max:60},rocketsPoint:{min:50,max:50},lineWidth:{explosion:{min:2,max:6},trace:{min:2,max:4}},brightness:{min:50,max:80},decay:{min:.015,max:.03},mouse:{click:!1,move:!1,max:1}}).start()}function init(){initCards(),initRoyal(),initPrivilege(),initChessboard(),initPlayers()}function initCards(){allLevel.forEach((e=>{initLevelCards(e)}))}function initRoyal(){renderRoyal()}function initPlayers(){renderPlayer()}function initLevelCards(e){const a=bank.cards[e],r=`${e}-cards`,l=initShowCardNumber[e],m=a.map(((e,a)=>renderCards(e,a))),i=m.splice(0,l).join(""),t=m.join("");$(`#${r} .hidden-cards`).html(t),$(`#${r} .show-cards`).html(i),$(`#${r}`).html(`\n        <div class="hidden-cards">${t}</div>\n        <div class="show-cards">${i}</div>\n    `)}function initPrivilege(){renderPrivilege()}function initChessboard(){fillBoard()}startFireworks(),clickSelector(".opt.jump",(function(e){giveUpPrivilege("已放弃使用特权"),selectRound(selectAction.COERCION)})),clickSelector(".opt.last",(function(e){resetStatus(),selectRound(selectAction.OPTIONAL)})),clickSelector(".opt-privilege",(function(e){playerList[usePlayer-1].privilege?($(this).addClass("picked"),usePrivilege=!0):renderMessage("你没有特权，无法使用")})),clickSelector(".chessboard .markers",(function(e){const a=$(this).attr("class").split(" ")[1];chooseGemType===a?(chooseGemType=!1,getGem(getGemType.GETBOARD,[$(this)]),endOfTurn()):usePrivilege&&"gold"!==a?(usePrivilege=!1,$(".opt-privilege").removeClass("picked"),removePrivilege(),getGem(getGemType.GETBOARD,[$(this)]),renderPlayer()):pickingGem&&"gold"!==a?handleSelectGem(this,3):prePurchase&&"gold"===a&&handleSelectGem(this,1)})),clickSelector(".card",(function(){(prePurchase||buying)&&(curPickCards.length&&(curPickCards=[],$(".card").removeClass("picked")),handleSelectCard(this))})),clickSelector(".pick-gem",(function(e){checkCoercionAction(this)||(pickingGem=!0)})),clickSelector(".pick-gem-confirm",(function(e){if(pickingGem)if(curPickGemIds.length){if(!checkCurGemsRule())return void renderMessage("请按照横竖斜且无间隔的规则，选取宝石");pickingGem=!1,$(".coercion-action .content").find(".picked").removeClass("picked");const e=curPickGemIds.map((e=>$(`#${e}`)));curPickGemIds.length>1&&checkRivalGetPrivilege(curPickGemIds)&&(renderMessage("对方获得一个特权"),getPrivilege(!1)),getGem(getGemType.GETBOARD,e),renderPlayer(),$(".spend-desc").css({visibility:"hidden"}),playerGemTotalCount()>10?(isAbandonGem=!0,selectRound(selectAction.ABANDON)):togglePlayer()}else renderMessage("请选择至少1个非金色的宝石")})),clickSelector(".pick-gem-cancel",(function(e){pickingGem&&resetStatus()})),clickSelector(".pre-card",(function(e){if(checkBoardGem("gold")&&playerList[usePlayer-1].preCards.length<3){if(checkCoercionAction(this))return;prePurchase=!0,$(".coercion-action .content").find(".picked").removeClass("picked"),$(this).addClass("picked"),showSpendGems()}else renderMessage("棋盘上没有金色宝石或者预购卡牌已满")})),clickSelector(".pre-card-confirm",(function(e){if(prePurchase)if(curPickGemIds.length||curPickCards.length)if(curPickCards.length){const e=getPlayerInfo("preCards");if(e.includes(curPickCards[0]))renderMessage("不能购买自己的预购卡牌");else if(curPickGemIds.length){prePurchase=!1,$(".coercion-action .content").find(".picked").removeClass("picked"),handleRemoveCard(),e.push(curPickCards[0]),curPickCards=[],$(".card").removeClass("picked");const a=curPickGemIds[0];getGem(getGemType.GETBOARD,[$(`#${a}`)]),playerGemTotalCount()>10?(isAbandonGem=!0,selectRound(selectAction.ABANDON)):endOfTurn(),$(".spend-desc").css({visibility:"hidden"})}else renderMessage("请选择金色宝石")}else renderMessage("请选择卡牌");else renderMessage("请选择卡牌和金色宝石")})),clickSelector(".pre-card-cancel",(function(e){prePurchase&&(prePurchase=!1,resetStatus(),$(".spend-desc").css({visibility:"hidden"}))})),clickSelector(".buy-card",(function(e){checkCoercionAction(this)||(buying=!0,$(".coercion-action .content").find(".picked").removeClass("picked"),$(this).addClass("picked"),showSpendGems())})),clickSelector(".buy-card-confirm",(function(e){if(!buying)return;if(0===curPickCards.length)return void renderMessage("请选择卡牌");const a=curPickCards[0];if(!$(`#${a} .spend-desc`).data("spendGems"))return void renderMessage("宝石不足, 无法购买当前卡牌");const r=idCards.find((e=>e.id===a)),l=getPlayerInfo("cards"),m=Object.keys(l).reduce(((e,a)=>e+l[a]),0);"change"!==r.subtract.gemType||0!==m?(buying=!1,isBuyPreCard=getPlayerInfo("preCards").includes(a),$(".coercion-action .content").find(".picked").removeClass("picked"),"change"===r.subtract.gemType?(chooseCardType=!0,renderMessage("请选择一张自己已有的卡牌"),$(".action").css({visibility:"hidden"})):buyLogic()):renderMessage("你没有卡牌，无法使用变色卡牌")})),clickSelector(".buy-card-cancel",(function(e){buying&&(resetStatus(),$(".spend-desc").css({visibility:"hidden"}))})),clickSelector(".opt-fill",(function(e){if(0===bank.markersId.length)return renderMessage("没有宝石可以填充");giveUpPrivilege("放弃使用特权，直接填充棋盘"),fillBoard(),getPrivilege(!1),renderPlayer(),selectRound(selectAction.COERCION),$(".opt.last").hide()})),clickSelector(".player-cards .player-card",(function(e){if(0===$(this).closest(`.player${usePlayer}`).length)return;const a=$(this).attr("class").split(" ")[1];0!==getPlayerInfo("cards")[a]&&chooseCardType&&(chooseCardType=!1,buyLogic(a))})),clickSelector(".game-players .player-gem",(function(e){const a=1===usePlayer?2:1,r=$(this).attr("class").split(" ")[1],l=getRivalInfo("gems")[r];isSkillStealing&&0!==$(this).closest(`.player${a}`).length&&"gold"!==r&&0!==l&&(isSkillStealing=!1,getPlayerInfo("gems")[r]+=1,getRivalInfo("gems")[r]-=1,endOfTurn())})),clickSelector(".royal-card",(function(e){if(isPickRoyal){isPickRoyal=!1;const e=$(this).attr("id"),a=bank.royalCards.findIndex((a=>a.id===e)),r=bank.royalCards.splice(a,1)[0];getPlayerInfo("royalCards").push(r);getPlayerInfo().reputation+=r.reputation,skillUse(r),renderRoyal()}})),clickSelector(".player-gems .player-gem",(function(e){const a=$(this).attr("class").split(" ")[1];0!==getPlayerInfo("gems")[a]&&isAbandonGem&&(getPlayerInfo("gems")[a]-=1,abandonGems[a]+=1,playerGemTotalCount()<=10&&(isAbandonGem=!1),renderAbandonAction(),renderPlayer())})),clickSelector(".abandon-action .abandon-item",(function(e){const a=$(this).attr("class").split(" ")[1];0!==abandonGems[a]&&(abandonGems[a]-=1,getPlayerInfo("gems")[a]+=1,playerGemTotalCount()>10&&(isAbandonGem=!0),renderAbandonAction(),renderPlayer())})),clickSelector(".opt .abandon-confirm",(function(e){if(Object.values(getPlayerInfo("gems")).reduce(((e,a)=>e+a),0)>10)return renderMessage("请确保当前玩家的宝石数量至多10个");markersToBank(abandonGems),abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},renderAbandonAction(),renderPlayer(),endOfTurn()})),clickSelector(".opt .abandon-reset",(function(e){isAbandonGem=!0,Object.keys(abandonGems).forEach((e=>{getPlayerInfo("gems")[e]+=abandonGems[e]})),abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},renderAbandonAction(),renderPlayer()})),clickSelector(".reputation-title",(function(e){renderMessage("声望值是游戏的胜利条件，当同色系声望达到10积分，游戏结束")})),clickSelector(".cards-title",(function(e){renderMessage("减少购买卡牌的宝石数量")})),clickSelector(".gems-title",(function(e){renderMessage("用来购买卡牌，当宝石总数大于10时，需要丢弃宝石")})),$("body").on("mouseenter",".player-pre-cards .card",(function(e){0!==$(this).closest(`.player${usePlayer}`).length&&$(this).removeClass("pre-show")})),$("body").on("mouseleave",".player-pre-cards .card",(function(e){0!==$(this).closest(`.player${usePlayer}`).length&&$(this).addClass("pre-show")})),clickSelector(".drawer-btn",(function(e){toggleDrawer(),e.stopPropagation()})),clickSelector(".chessboard-intro",(function(e){introJs().setOptions({steps:[{element:document.querySelector(".chessboard"),intro:"棋盘, 放置宝石"},{element:document.querySelector('[position="cell-25"].markers'),intro:"宝石, 购买卡牌"},{element:document.querySelector("#marker-22"),intro:"金色宝石可当任意颜色宝石使用。只能通过【预购卡牌】获得。"}]}).start()})),clickSelector(".card-intro",(function(e){introJs().setOptions({steps:[{element:document.querySelector("#cards-container"),intro:"卡牌, 购买后可获得卡牌上方的声望、技能、王冠、宝石"},{element:document.querySelector("#cards-container .show-cards .card .reputation-value"),intro:"声望（0或者更多）"},{element:document.querySelector("#cards-container .show-cards .card .skill"),intro:"技能"},{element:document.querySelector("#cards-container .show-cards .card .crown-container"),intro:"王冠(0～3)"},{element:document.querySelector("#cards-container .show-cards .card .markers-container "),intro:"可抵扣的宝石数量(0~2)"},{element:document.querySelector("#cards-container .show-cards .card .spend-value"),intro:"购买卡牌需要花费的宝石数量"}]}).start()})),clickSelector(".royal-intro",(function(e){toggleDrawer(!0);const a=[{element:document.querySelector(".drawer-content #privilege-container"),intro:"银行所拥有的特权。"},{element:document.querySelector(".drawer-content #royal-cards"),intro:"贵族卡: 当前玩家王冠超过3个或者6个时，会自动触发获取贵族卡。<br/>\n      可从中选1张，将获得其技能和声望。"},{element:document.querySelector(".drawer-content #royal-cards .reputation-value"),intro:"可获得的总声望值。"},{element:document.querySelector(".drawer-content #royal-cards .skill.steal"),intro:"技能：拿取对手一枚宝石。"},{element:document.querySelector(".drawer-content #royal-cards .skill.again"),intro:"技能：再次行动。"},{element:document.querySelector(".drawer-content #royal-cards .skill.privilege"),intro:"技能：获取一枚特权。"}],r=introJs().setOptions({steps:a});r.onexit((function(e){stopRoyalDrawer=!1})),stopRoyalDrawer=!0,setTimeout((()=>{r.start()}),510)})),clickSelector(".player-intro",(function(e){const a=[{element:document.querySelector(".player1 .score-container .reputation"),intro:"购买卡牌获得的总声望，达到20分，游戏胜利"},{element:document.querySelector(".player1 .score-container .crown"),intro:"<div>购买卡牌获得的总王冠数量，达到10个，游戏胜利.</div>\n      <div>超过3个或者6个时，会触发获取贵族卡</div>"},{element:document.querySelector(".player1 .score-container .privilege"),intro:"<div>拥有特权的数量。</div>\n              <div>特权来源：<br/>\n              1.对方在强制行动中拿取3个一样颜色的宝石或者2个粉色.<br/>\n              2.对方补充棋盘.<br/>\n              3.卡牌或贵族技能有特权.<br/>\n              满足上述条件中的任意一个，你可以从银行拿取1枚特权，如果银行没有特权，你可以从对方手中拿取。如果对方手中也没有，则无事发生。\n              </div>"},{element:document.querySelector(".player1 .player-reputation"),intro:"任意颜色的声望达到10分，游戏胜利"},{element:document.querySelector(".player1 .player-cards"),intro:"可减少购买卡牌，所花费的宝石"},{element:document.querySelector(".player1 .player-gems"),intro:"当前手上持有的宝石数量, 超过10个需要丢弃"}];introJs().setOptions({steps:a}).start()})),clickSelector(".action-intro",(function(e){if("none"!==$(".coercion-action").css("display")&&"none"===$(".opt.last").css("display"))return renderMessage("已填充宝石的情况下，暂不支持新手指引");const a=[{element:document.querySelector(".optional-action"),intro:"可选行动:【使用特权】【补充棋盘】可以不操作。"},{element:document.querySelector(".opt-privilege"),intro:"使用特权: 可以从棋盘上拿取除黄金宝石外的任意宝石。可执行多次"},{element:document.querySelector(".opt-fill"),intro:"补充棋盘: 将【银行宝石】按照从棋盘中间箭头开始的顺序随机铺满。操作后对方玩家会获得1特权，且进入强制行动。"},{element:document.querySelector(".opt.jump"),intro:"跳过可选行动"},{element:document.querySelector(".coercion-action"),intro:"强制行动: 【拿取宝石】【预购卡牌】【购买卡牌】必须选1个行动"},{element:document.querySelector(".pick-gem"),intro:"拿取宝石：可以从棋盘上拿取【横竖斜】不间断的至多3个宝石，不包括【黄金】宝石。"},{element:document.querySelector(".pre-card"),intro:"预购卡牌：可以拿一张非预购卡牌+一颗黄金宝石。<br/>\n        作用：无法被对方玩家购买和看见，最多拿3张预购卡牌。<br/>\n        注意：正面/背面展示的卡牌都可以预购。"},{element:document.querySelector(".buy-card"),intro:"购买卡牌：可以购买桌面上展示的卡牌+您自己的预购卡牌"},{element:document.querySelector(".opt.last"),intro:"如果无法执行强制行动或者想进行可选行动操作，点击返回"}],r=introJs().setOptions({steps:a});r.onbeforechange((function(e){let a=r._currentStep;a>3?"none"!==$(".optional-action").css("display")&&$(".opt.jump").trigger("click"):a<=3&&"none"!==$(".coercion-action").css("display")&&$(".opt.last").trigger("click")})).oncomplete((function(){$(".opt.last").trigger("click")})),r.start()})),clickSelector(".rule-intro .title",(function(e){$ruleContent=$(".rule-intro .content"),$ruleContent.hasClass("active")?$ruleContent.removeClass("active"):$ruleContent.addClass("active")})),$(document).click((function(){stopRoyalDrawer||"matrix(1, 0, 0, 1, 0, 0)"===$(".drawer-container").css("transform")&&closeDrawer()})),init();