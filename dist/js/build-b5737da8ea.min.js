"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var a=0,t=new Array(r);a<r;a++)t[a]=e[a];return t}function shuffleArray(e){for(var r=e.length-1;r>0;r--){var a=Math.floor(Math.random()*(r+1)),t=[e[a],e[r]];e[r]=t[0],e[a]=t[1]}return e}var clickSelector=function(e,r){$("body").on("click",e,r)};function checkAlignment(e){if(e.length<2)return!0;var r=e.map((function(e){return e.split("-").map(Number)})),a=_toConsumableArray(r).sort((function(e,r){return e[0]===r[0]?e[1]-r[1]:e[0]-r[0]})),t=_toConsumableArray(r).sort((function(e,r){return e[1]===r[1]?e[0]-r[0]:e[1]-r[1]})),n=a.every((function(e,r,a){return 0===r||e[0]===a[r-1][0]&&e[1]===a[r-1][1]+1})),l=t.every((function(e,r,a){return 0===r||e[1]===a[r-1][1]&&e[0]===a[r-1][0]+1})),i=checkDiagonal(a,1),m=checkDiagonal(a,-1);return n||l||i||m}function checkDiagonal(e,r){return e.every((function(e,a,t){return 0===a||e[0]===t[a-1][0]+1&&e[1]===t[a-1][1]+r}))}var getGemType={GETBOARD:1,GETPLAYER:2},selectAction={OPTIONAL:1,COERCION:2,ABANDON:3};function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var a=0,t=new Array(r);a<r;a++)t[a]=e[a];return t}function ownKeys(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(a),!0).forEach((function(r){_defineProperty(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ownKeys(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function _defineProperty(e,r,a){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function _toPropertyKey(e){var r=_toPrimitive(e,"string");return"symbol"==_typeof(r)?r:r+""}function _toPrimitive(e,r){if("object"!=_typeof(e)||!e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var t=a.call(e,r||"default");if("object"!=_typeof(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}var cards=[{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:1,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:1},{gemType:"sapphire",gemValue:1},{gemType:"emerald",gemValue:1},{gemType:"ruby",gemValue:1},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"acquire",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:0,crown:0,skill:"again",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:0,crown:1,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:1,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:1},{gemType:"pearl",gemValue:1}]},{level:"first",reputation:3,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:4},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:5},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:4},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:4},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:5},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:2},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:5},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:4},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:4},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:2},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:5},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:1,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:2},spend:[{gemType:"diamond",gemValue:5},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:0,skill:"privilege",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:4},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:1,crown:0,skill:"steal",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:4},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"second",reputation:2,crown:1,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:5,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:0,crown:2,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:2,crown:0,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"second",reputation:0,crown:2,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:5},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"diamond",gemValue:1},spend:[{gemType:"diamond",gemValue:6},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:5},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"sapphire",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:6},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:2},{gemType:"emerald",gemValue:6},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"emerald",gemValue:1},spend:[{gemType:"diamond",gemValue:5},{gemType:"sapphire",gemValue:3},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:2},{gemType:"ruby",gemValue:6},{gemType:"framesite",gemValue:2},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"ruby",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:5},{gemType:"emerald",gemValue:3},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:3},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:3,crown:2,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:3},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:5},{gemType:"ruby",gemValue:3},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:1}]},{level:"third",reputation:4,crown:0,skill:"",subtract:{gemType:"framesite",gemValue:1},spend:[{gemType:"diamond",gemValue:2},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:2},{gemType:"framesite",gemValue:6},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:0,crown:3,skill:"change",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:8},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:3,crown:0,skill:"again",subtract:{gemType:"change",gemValue:1},spend:[{gemType:"diamond",gemValue:0},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:8},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]},{level:"third",reputation:6,crown:0,skill:"",subtract:{gemType:"",gemValue:0},spend:[{gemType:"diamond",gemValue:8},{gemType:"sapphire",gemValue:0},{gemType:"emerald",gemValue:0},{gemType:"ruby",gemValue:0},{gemType:"framesite",gemValue:0},{gemType:"pearl",gemValue:0}]}],idCards=cards.map((function(e,r){return _objectSpread(_objectSpread({},e),{},{id:r<9?"card-0".concat(r+1):"card-".concat(r+1)})})),firstCards=shuffleArray(idCards.filter((function(e){return"first"===e.level}))),secondCards=shuffleArray(idCards.filter((function(e){return"second"===e.level}))),thirdCards=shuffleArray(idCards.filter((function(e){return"third"===e.level}))),markersId=[{id:"marker-01",gemType:"framesite"},{id:"marker-02",gemType:"framesite"},{id:"marker-03",gemType:"framesite"},{id:"marker-04",gemType:"framesite"},{id:"marker-05",gemType:"ruby"},{id:"marker-06",gemType:"ruby"},{id:"marker-07",gemType:"ruby"},{id:"marker-08",gemType:"ruby"},{id:"marker-09",gemType:"sapphire"},{id:"marker-10",gemType:"sapphire"},{id:"marker-11",gemType:"sapphire"},{id:"marker-12",gemType:"sapphire"},{id:"marker-13",gemType:"emerald"},{id:"marker-14",gemType:"emerald"},{id:"marker-15",gemType:"emerald"},{id:"marker-16",gemType:"emerald"},{id:"marker-17",gemType:"diamond"},{id:"marker-18",gemType:"diamond"},{id:"marker-19",gemType:"diamond"},{id:"marker-20",gemType:"diamond"},{id:"marker-21",gemType:"gold"},{id:"marker-22",gemType:"gold"},{id:"marker-23",gemType:"gold"},{id:"marker-24",gemType:"pearl"},{id:"marker-25",gemType:"pearl"}],boardMarkers=Array.from({length:25},(function(e){})),bank={markersId:[].concat(markersId),cards:{first:_toConsumableArray(firstCards),second:_toConsumableArray(secondCards),third:_toConsumableArray(thirdCards)},royalCards:[{id:"royal-01",reputation:3,skill:""},{id:"royal-02",reputation:2,skill:"steal"},{id:"royal-03",reputation:2,skill:"again"},{id:"royal-04",reputation:2,skill:"privilege"}],privilege:2},initShowCardNumber={first:5,second:4,third:3},abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},playerList=[{reputation:0,crown:0,privilege:0,gems:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},reputations:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},cards:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},markersId:[],royalCards:[],preCards:[]},{reputation:0,crown:0,privilege:1,gems:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},reputations:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},cards:{diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0},markersId:[],royalCards:[],preCards:[]}],showEnum={diamond:"白",sapphire:"蓝",emerald:"绿",ruby:"红",framesite:"黑",gold:"金",pearl:"粉"},allLevel=_toConsumableArray(new Set(cards.map((function(e){return e.level})))),ruleLimitGem=3,ruleGoldLimitGem=1,ruleLimitCard=3,ruleLimitMarker=10,usePrivilege=!1,usePlayer=1,pickingGem=!1,prePurchase=!1,buying=!1,chooseCardType=!1,isSkillStealing=!1,isAbandonGem=!1,isPickRoyal=!1,isBuyPreCard=!1,chooseGemType="",stopRoyalDrawer=!1,curPickGemIds=[],curPickCards=[];function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function ownKeys(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(a),!0).forEach((function(r){_defineProperty(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ownKeys(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function _defineProperty(e,r,a){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function _toPropertyKey(e){var r=_toPrimitive(e,"string");return"symbol"==_typeof(r)?r:r+""}function _toPrimitive(e,r){if("object"!=_typeof(e)||!e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var t=a.call(e,r||"default");if("object"!=_typeof(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var a=0,t=new Array(r);a<r;a++)t[a]=e[a];return t}function handleSelectGem(e,r){var a=$(e).attr("id");if($(e).toggleClass("picked").hasClass("picked")?curPickGemIds.push(a):curPickGemIds=curPickGemIds.filter((function(e){return e!==a})),curPickGemIds.length>r){var t=curPickGemIds.splice(0,1);$("#".concat(t)).removeClass("picked")}}function handleSelectCard(e){var r=$(e).attr("id");$(e).toggleClass("picked").hasClass("picked")?curPickCards.push(r):curPickCards=curPickCards.filter((function(e){return e!==r}))}function handleRemoveCard(){if(curPickCards.length){var e=curPickCards[0],r=idCards.find((function(r){return r.id===e})).level,a=bank.cards[r],t=a.findIndex((function(r){return r.id===e}));if(-1!==t&&t<=initShowCardNumber[r]&&(a[t]=a.pop()),isBuyPreCard){var n=playerList[usePlayer-1].preCards.indexOf(e);-1!==n&&playerList[usePlayer-1].preCards.splice(n,1),isBuyPreCard=!1}initLevelCards(r)}}function togglePlayer(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&(usePlayer=1===usePlayer?2:1),renderPlayerView(),selectRound(selectAction.OPTIONAL)}var getPlayerInfo=function(e){return e?playerList[usePlayer-1][e]:playerList[usePlayer-1]},getRivalInfo=function(e){return e?playerList[1===usePlayer?1:0][e]:playerList[1===usePlayer?1:0]};function getPlayerPrivilege(e,r){playerList[e].privilege<3&&(bank.privilege?bank.privilege-=1:playerList[r].privilege&&(playerList[r].privilege-=1),playerList[e].privilege+=1),renderPrivilege()}function showSpendGems(){var e=playerList[usePlayer-1].preCards,r=allLevel.flatMap((function(e){return $("#".concat(e,"-cards .show-cards .card")).map((function(e,r){return $(r).attr("id")})).get()}));renderShowCardsSpend([].concat(_toConsumableArray(e),_toConsumableArray(r)))}function computedBuyCardSpend(e){var r=idCards.find((function(r){return r.id===e})).spend,a=playerList[usePlayer-1].gems,t=playerList[usePlayer-1].cards,n="",l={};for(var i in t)l[i]=0;r.forEach((function(e){var r=e.gemValue,n=t[e.gemType]||0,i=a[e.gemType];l[e.gemType]=n>=r?0:n+i>=r?r-n:n+i-r}));var m=Object.keys(l).every((function(e){return 0===l[e]})),o=Object.keys(l).every((function(e){return l[e]>=0})),s=Object.keys(l).filter((function(e){return l[e]>0})),u=Object.keys(l).filter((function(e){return l[e]<0}));if(m)n="免费",$("#".concat(e," .spend-desc")).data("spendGems","free");else if(o)n=s.reduce((function(e,r){return e+"".concat(l[r]).concat(showEnum[r])}),"花"),$("#".concat(e," .spend-desc")).data("spendGems",l);else{var c=u.reduce((function(e,r){return e+l[r]}),0);Math.abs(c)>a.gold?n=u.reduce((function(e,r){return e+"".concat(Math.abs(l[r])).concat(showEnum[r])}),"缺"):(n+=s.reduce((function(e,r){return e+"".concat(l[r]).concat(showEnum[r])}),"花"),n+=u.reduce((function(e,r){return e+(a[r]?"".concat(a[r]).concat(showEnum[r]):"")}),""),n+="".concat(Math.abs(c),"金"),$("#".concat(e," .spend-desc")).data("spendGems",_objectSpread(_objectSpread({},l),{},{gold:Math.abs(c)})))}$("#".concat(e," .spend-desc")).text(n),$(".spend-desc").css({visibility:"initial"})}function buyLogic(e){var r=curPickCards[0],a=idCards.find((function(e){return e.id===r}));computedCardScore(a,$("#".concat(r," .spend-desc")).data("spendGems"),e),skillUse(a)}function computedCardScore(e,r,a){var t=getPlayerInfo();t.reputation+=e.reputation,t.crown+=e.crown,handleComputedPlayerCard(t,e,a),"free"!==r&&markersToBank(r),handlePlayerGemValue()}function markersToBank(e){var r=getPlayerInfo("markersId");Object.keys(e).forEach((function(a){for(var t=e[a],n=0;n<t;n++){var l=r.findIndex((function(e){return e.gemType===a}));if(-1!==l){var i,m=r.splice(l,1);(i=bank.markersId).push.apply(i,_toConsumableArray(m))}}}))}function skillUse(e){if("again"===e.skill)renderMessage("触发技能: 再次回合"),endOfTurn(!1);else if("privilege"===e.skill)renderMessage("触发技能: 获取特权"),getPrivilege(),endOfTurn();else if("acquire"===e.skill){var r=e.subtract.gemType;checkBoardGem(r)?(renderMessage("触发技能: 从棋盘上拿取相同颜色宝石",3e3),chooseGemType=r,$(".action").css({visibility:"hidden"})):(renderMessage("棋盘上无相同宝石拿取, 进入下一回合"),endOfTurn())}else if("steal"===e.skill){var a=getRivalInfo("gems");Object.keys(a).some((function(e){return"gold"!==e&&a[e]>0}))?(renderMessage("触发技能: 拿取对手宝石"),isSkillStealing=!0,$(".action").css({visibility:"hidden"})):(renderMessage("对手无宝石可拿取，进入下一回合"),endOfTurn())}else endOfTurn()}function endOfTurn(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];handleRemoveCard(),renderPlayer(),$(".spend-desc").css({visibility:"hidden"}),checkPlayerCrownCount(),isPickRoyal||($(".action").css({visibility:"initial"}),checkGameEnd(),togglePlayer(e))}function handleComputedPlayerCard(e,r,a){var t=a||r.subtract.gemType;t&&(e.cards[t]+=r.subtract.gemValue,e.reputations[t]+=r.reputation)}function checkRivalGetPrivilege(e){var r=e.map((function(e){return markersId.find((function(r){return e===r.id})).gemType}));return 2===r.filter((function(e){return"pearl"===e})).length||3===r.length&&r.every((function(e){return e===r[0]}))}function checkPlayerCrownCount(){var e=getPlayerInfo("crown"),r=getPlayerInfo("royalCards").length;2!==r&&3*(r+1)<=e&&(isPickRoyal=!0,toggleDrawer(!0),renderMessage("请选择一张贵族卡牌"))}function fillBoard(){shuffleArray(bank.markersId),boardMarkers.forEach((function(e,r){e||(boardMarkers[r]=bank.markersId.pop())})),renderBoardMarkers(boardMarkers)}function checkBoardGem(e){return boardMarkers.some((function(r){return r&&$("#".concat(r.id)).attr("class").split(" ")[1]===e}))}function playerGemTotalCount(){var e=getPlayerInfo("gems");return Object.keys(e).reduce((function(r,a){return r+e[a]}),0)}function handlePlayerGemValue(){var e={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0};getPlayerInfo("markersId").forEach((function(r){e[r.gemType]+=1})),getPlayerInfo().gems=e;var r={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0};getRivalInfo("markersId").forEach((function(e){r[e.gemType]+=1})),getRivalInfo().gems=r}function checkOtherAction(){return chooseGemType||isSkillStealing||chooseCardType||isPickRoyal}function checkCoercionAction(e){if($(e).hasClass("picked")||checkOtherAction())return!0;resetStatus(e)}function resetStatus(e){curPickCards=[],curPickGemIds=[],pickingGem=!1,prePurchase=!1,buying=!1,$(".spend-desc").css({visibility:"hidden"}),renderPicked(e)}function checkGameEnd(){var e=getPlayerInfo();if(e.reputation>=20)renderMessage("游戏结束，声望达到20分"),renderGameOver();else if(e.crown>=10)renderMessage("游戏结束，皇冠达到10个"),renderGameOver();else{Object.values(e.reputations).some((function(e){return e>=10}))&&(renderMessage("游戏结束，同色卡牌声望达到10分"),renderGameOver())}}function checkCurGemsRule(){return checkAlignment(curPickGemIds.map((function(e){return $("#".concat(e)).data("position")})))}function giveUpPrivilege(e){usePrivilege&&(renderMessage(e),usePrivilege=!1,$(".opt-privilege").removeClass("picked"))}function renderCards(e,r,a){var t=r>initShowCardNumber[e.level],n=r===initShowCardNumber[e.level];return'\n          <div id="'.concat(e.id,'" class="card ').concat(e.subtract.gemType?e.subtract.gemType:"common"," ").concat(t?"hide-content":""," ").concat(n?"pre-show":""," ").concat(a||"",'">\n              <div class="effect-image">\n                <div class="reputation ').concat(e.skill?"":"short",'">\n                  <div class="reputation-value" style="visibility : ').concat(e.reputation?"initial":"hidden",'">').concat(e.reputation,"</div>\n                  ").concat(e.skill?'<div class="skill '.concat(e.skill,'"></div>'):"",'\n                </div>\n                <div class="crown-container">\n                ').concat(Array.from({length:e.crown}).map((function(r){return'<div class="'.concat(1===e.crown?"crown crown-only":"crown",'"></div>')})).join(""),'\n                </div>\n                <div class="markers-container ').concat(e.subtract.gemValue?"":"hidden",'">\n                  ').concat(Array.from({length:e.subtract.gemValue}).map((function(e){return'<div class="marker"></div>'})).join(""),'\n                </div>\n              </div>\n              <div class="spend-desc"></div>\n              <div class="spend-value">\n                ').concat(e.spend.map((function(e){return"".concat(e.gemValue?'<div class="player-gem '.concat(e.gemType,'">').concat(e.gemValue,"</div>"):"")})).join(""),"\n              </div> \n\n          </div>\n      ")}function renderBoardMarkers(e){e.forEach((function(e,r){if(e){var a=e.id,t=r<9?"cell-0".concat(r+1):"cell-".concat(r+1),n=$("#".concat(t)),l=$("#".concat(a)),i=n.offset(),m=n.outerWidth(),o=n.outerHeight(),s=i.left+m/2-20,u=i.top+o/2;l.css({left:s,top:u}),l.attr("position",t),l.data("position",n.data("position"))}}))}function renderPlayer(){var e=playerList.map((function(e,r){var a=r+1;return'\n      <div class="player'.concat(a,'">\n      <div class="player-score">\n    <div class="player-info">\n    <div class="player-name">玩家').concat(a,'</div>\n    <div class="score-container">\n      <div class="reputation">').concat(e.reputation,'</div>\n      <div class="crown">').concat(e.crown,'</div>\n      <div class="privilege">').concat(e.privilege,'</div>\n    </div>\n  </div>\n  <div class="player-reputation">\n    <span class="reputation-title">声望</span>\n    ').concat(Object.keys(e.reputations).map((function(r){return'<div class="player-card '.concat(r,'">').concat(e.reputations[r],"</div>")})).join(""),'\n  </div>\n  <hr/>\n  <div class="player-cards">\n    <span class="cards-title">卡牌</span>\n    ').concat(Object.keys(e.cards).map((function(r){return'<div class="player-card '.concat(r,'">').concat(e.cards[r],"</div>")})).join(""),'\n  </div>\n  <div class="player-gems">\n    <span class="gems-title">宝石</span>\n  ').concat(Object.keys(e.gems).map((function(r){return'<div class="player-gem '.concat(r,'">').concat(e.gems[r],"</div>")})).join(""),'\n  </div>\n    </div>\n    <div class="player-pre-cards">\n    ').concat(e.preCards.map((function(e){var r=idCards.find((function(r){return r.id===e}));return renderCards(r,initShowCardNumber[r.level],r.level)})).join(""),"\n    </div>\n  </div>")})).join("");$(".game-players").html(e)}function renderPlayerView(){$(".action .play-name").text("玩家".concat(usePlayer)),$(".opt-fill").text("补充棋盘(剩余宝石数：".concat(bank.markersId.length,")"))}var removePrivilege=function(){playerList[usePlayer-1].privilege-=1,bank.privilege+=1,renderPrivilege()},getPrivilege=function(){!(arguments.length>0&&void 0!==arguments[0])||arguments[0]?getPlayerPrivilege(usePlayer-1,1===usePlayer?1:0):getPlayerPrivilege(1===usePlayer?1:0,usePlayer-1)},getGem=function(e,r){e===getGemType.GETBOARD?(removeBoard(r),curPickGemIds=[],$(".markers").removeClass("picked")):e===getGemType.GETPLAYER&&removePlayer()};function removeBoard(e){e.forEach((function(e){var r=e.attr("id");boardMarkers.forEach((function(e,a){e&&e.id===r&&(getPlayerInfo("markersId").push(boardMarkers[a]),boardMarkers[a]="")})),handlePlayerGemValue(),renderBoardMarkers(boardMarkers),renderPlayer(),e.attr("position","player-".concat(usePlayer))}))}function renderShowCardsSpend(e){e.forEach((function(e){computedBuyCardSpend(e)}))}function removePlayer(){}function selectRound(e){e===selectAction.OPTIONAL?($(".coercion-action").hide(),$(".abandon-action").hide(),$(".optional-action").css("display","flex"),$(".opt.last").show()):e===selectAction.COERCION?($(".optional-action").hide(),$(".abandon-action").hide(),$(".coercion-action").css("display","flex")):e===selectAction.ABANDON&&($(".optional-action").hide(),$(".coercion-action").hide(),$(".abandon-action").css("display","flex"))}function renderRoyal(){var e=bank.royalCards.map((function(e){return'\n  <div id="'.concat(e.id,'" class="card royal-card">\n    <div class="effect-image">\n      <div class="reputation-value short">').concat(e.reputation,'</div>\n      <div class="skill ').concat(e.skill,'"></div>\n    </div>\n  </div>\n  ')}));$("#royal-cards").html(e)}function renderPrivilege(){var e=Array.from({length:bank.privilege}).map((function(e){return'<div class="privilege"></div>'})).join("");$("#privilege-container").html(e)}function renderAbandonAction(){Object.keys(abandonGems).forEach((function(e){$(".abandon-action .".concat(e)).text(abandonGems[e])}))}function renderMessage(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e3;$(".tips").text(e),$(".tips").show(),setTimeout((function(){$(".tips").hide()}),r)}function renderPicked(e){$(".picked").removeClass("picked"),$(e).addClass("picked")}function renderGameOver(){$(".game-over").html('<div class="game-text">恭喜玩家'.concat(usePlayer,"，获胜！</div>")),$(".game-over").show(),startFireworks()}function toggleDrawer(e){var r=$(".drawer-container"),a=$(".drawer-btn");if(e||"matrix(1, 0, 0, 1, 0, 0)"!==r.css("transform")){r.css("transform","translateY(0)");var t=$(".drawer-content").outerHeight(!0);a.css("top",t+"px")}else closeDrawer()}function closeDrawer(){var e=$(".drawer-container"),r=$(".drawer-btn");e.css("transform","translateY(-100%)"),r.css("top","0px")}function startFireworks(){var e=document.querySelector(".game-over");new Fireworks.default(e,{autoresize:!0,opacity:.5,acceleration:1.05,friction:.97,gravity:1.5,particles:50,traceLength:3,traceSpeed:5,explosion:7,intensity:30,flickering:50,lineStyle:"round",hue:{min:0,max:360},delay:{min:30,max:60},rocketsPoint:{min:50,max:50},lineWidth:{explosion:{min:2,max:6},trace:{min:2,max:4}},brightness:{min:50,max:80},decay:{min:.015,max:.03},mouse:{click:!1,move:!1,max:1}}).start()}function init(){initCards(),initRoyal(),initPrivilege(),initChessboard(),initPlayers()}function initCards(){allLevel.forEach((function(e){initLevelCards(e)}))}function initRoyal(){renderRoyal()}function initPlayers(){renderPlayer()}function initLevelCards(e){var r=bank.cards[e],a="".concat(e,"-cards"),t=initShowCardNumber[e],n=r.map((function(e,r){return renderCards(e,r)})),l=n.splice(0,t).join(""),i=n.join("");$("#".concat(a," .hidden-cards")).html(i),$("#".concat(a," .show-cards")).html(l),$("#".concat(a)).html('\n        <div class="hidden-cards">'.concat(i,'</div>\n        <div class="show-cards">').concat(l,"</div>\n    "))}function initPrivilege(){renderPrivilege()}function initChessboard(){fillBoard()}startFireworks(),clickSelector(".opt.jump",(function(e){giveUpPrivilege("已放弃使用特权"),selectRound(selectAction.COERCION)})),clickSelector(".opt.last",(function(e){resetStatus(),selectRound(selectAction.OPTIONAL)})),clickSelector(".opt-privilege",(function(e){playerList[usePlayer-1].privilege?($(this).addClass("picked"),usePrivilege=!0):renderMessage("你没有特权，无法使用")})),clickSelector(".chessboard .markers",(function(e){var r=$(this).attr("class").split(" ")[1];chooseGemType===r?(chooseGemType=!1,getGem(getGemType.GETBOARD,[$(this)]),endOfTurn()):usePrivilege&&"gold"!==r?(usePrivilege=!1,$(".opt-privilege").removeClass("picked"),removePrivilege(),getGem(getGemType.GETBOARD,[$(this)]),renderPlayer()):pickingGem&&"gold"!==r?handleSelectGem(this,ruleLimitGem):prePurchase&&"gold"===r&&handleSelectGem(this,ruleGoldLimitGem)})),clickSelector(".card",(function(){(prePurchase||buying)&&(curPickCards.length&&(curPickCards=[],$(".card").removeClass("picked")),handleSelectCard(this))})),clickSelector(".pick-gem",(function(e){checkCoercionAction(this)||(pickingGem=!0)})),clickSelector(".pick-gem-confirm",(function(e){if(pickingGem)if(curPickGemIds.length){if(!checkCurGemsRule())return void renderMessage("请按照横竖斜且无间隔的规则，选取宝石");pickingGem=!1,$(".coercion-action .content").find(".picked").removeClass("picked");var r=curPickGemIds.map((function(e){return $("#".concat(e))}));curPickGemIds.length>1&&checkRivalGetPrivilege(curPickGemIds)&&(renderMessage("对方获得一个特权"),getPrivilege(!1)),getGem(getGemType.GETBOARD,r),renderPlayer(),$(".spend-desc").css({visibility:"hidden"}),playerGemTotalCount()>ruleLimitMarker?(isAbandonGem=!0,selectRound(selectAction.ABANDON)):togglePlayer()}else renderMessage("请选择至少1个非金色的宝石")})),clickSelector(".pick-gem-cancel",(function(e){pickingGem&&resetStatus()})),clickSelector(".pre-card",(function(e){if(checkBoardGem("gold")&&playerList[usePlayer-1].preCards.length<ruleLimitGem){if(checkCoercionAction(this))return;prePurchase=!0,$(".coercion-action .content").find(".picked").removeClass("picked"),$(this).addClass("picked"),showSpendGems()}else renderMessage("棋盘上没有金色宝石或者预购卡牌已满")})),clickSelector(".pre-card-confirm",(function(e){if(prePurchase)if(curPickGemIds.length||curPickCards.length)if(curPickCards.length){var r=getPlayerInfo("preCards");if(r.includes(curPickCards[0]))renderMessage("不能购买自己的预购卡牌");else if(curPickGemIds.length){prePurchase=!1,$(".coercion-action .content").find(".picked").removeClass("picked"),handleRemoveCard(),r.push(curPickCards[0]),curPickCards=[],$(".card").removeClass("picked");var a=curPickGemIds[0];getGem(getGemType.GETBOARD,[$("#".concat(a))]),playerGemTotalCount()>ruleLimitMarker?(isAbandonGem=!0,selectRound(selectAction.ABANDON)):endOfTurn(),$(".spend-desc").css({visibility:"hidden"})}else renderMessage("请选择金色宝石")}else renderMessage("请选择卡牌");else renderMessage("请选择卡牌和金色宝石")})),clickSelector(".pre-card-cancel",(function(e){prePurchase&&(prePurchase=!1,resetStatus(),$(".spend-desc").css({visibility:"hidden"}))})),clickSelector(".buy-card",(function(e){checkCoercionAction(this)||(buying=!0,$(".coercion-action .content").find(".picked").removeClass("picked"),$(this).addClass("picked"),showSpendGems())})),clickSelector(".buy-card-confirm",(function(e){if(buying)if(0!==curPickCards.length){var r=curPickCards[0];if($("#".concat(r," .spend-desc")).data("spendGems")){var a=idCards.find((function(e){return e.id===r})),t=getPlayerInfo("cards"),n=Object.keys(t).reduce((function(e,r){return e+t[r]}),0);"change"!==a.subtract.gemType||0!==n?(buying=!1,isBuyPreCard=getPlayerInfo("preCards").includes(r),$(".coercion-action .content").find(".picked").removeClass("picked"),"change"===a.subtract.gemType?(chooseCardType=!0,renderMessage("请选择一张自己已有的卡牌"),$(".action").css({visibility:"hidden"})):buyLogic()):renderMessage("你没有卡牌，无法使用变色卡牌")}else renderMessage("宝石不足, 无法购买当前卡牌")}else renderMessage("请选择卡牌")})),clickSelector(".buy-card-cancel",(function(e){buying&&(resetStatus(),$(".spend-desc").css({visibility:"hidden"}))})),clickSelector(".opt-fill",(function(e){if(0===bank.markersId.length)return renderMessage("没有宝石可以填充");giveUpPrivilege("放弃使用特权，直接填充棋盘"),fillBoard(),getPrivilege(!1),renderPlayer(),selectRound(selectAction.COERCION),$(".opt.last").hide()})),clickSelector(".player-cards .player-card",(function(e){if(0!==$(this).closest(".player".concat(usePlayer)).length){var r=$(this).attr("class").split(" ")[1];0!==getPlayerInfo("cards")[r]&&chooseCardType&&(chooseCardType=!1,buyLogic(r))}})),clickSelector(".game-players .player-gem",(function(e){var r=1===usePlayer?2:1,a=$(this).attr("class").split(" ")[1],t=getRivalInfo("gems")[a];isSkillStealing&&0!==$(this).closest(".player".concat(r)).length&&"gold"!==a&&0!==t&&(isSkillStealing=!1,getPlayerInfo("gems")[a]+=1,getRivalInfo("gems")[a]-=1,endOfTurn())})),clickSelector(".royal-card",(function(e){if(isPickRoyal){isPickRoyal=!1;var r=$(this).attr("id"),a=bank.royalCards.findIndex((function(e){return e.id===r})),t=bank.royalCards.splice(a,1)[0];getPlayerInfo("royalCards").push(t),getPlayerInfo().reputation+=t.reputation,skillUse(t),renderRoyal()}})),clickSelector(".player-gems .player-gem",(function(e){var r=$(this).attr("class").split(" ")[1];0!==getPlayerInfo("gems")[r]&&isAbandonGem&&(getPlayerInfo("gems")[r]-=1,abandonGems[r]+=1,playerGemTotalCount()<=ruleLimitMarker&&(isAbandonGem=!1),renderAbandonAction(),renderPlayer())})),clickSelector(".abandon-action .abandon-item",(function(e){var r=$(this).attr("class").split(" ")[1];0!==abandonGems[r]&&(abandonGems[r]-=1,getPlayerInfo("gems")[r]+=1,playerGemTotalCount()>ruleLimitMarker&&(isAbandonGem=!0),renderAbandonAction(),renderPlayer())})),clickSelector(".opt .abandon-confirm",(function(e){if(Object.values(getPlayerInfo("gems")).reduce((function(e,r){return e+r}),0)>10)return renderMessage("请确保当前玩家的宝石数量至多10个");markersToBank(abandonGems),abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},renderAbandonAction(),renderPlayer(),endOfTurn()})),clickSelector(".opt .abandon-reset",(function(e){isAbandonGem=!0,Object.keys(abandonGems).forEach((function(e){getPlayerInfo("gems")[e]+=abandonGems[e]})),abandonGems={diamond:0,sapphire:0,emerald:0,ruby:0,framesite:0,pearl:0,gold:0},renderAbandonAction(),renderPlayer()})),clickSelector(".reputation-title",(function(e){renderMessage("声望值是游戏的胜利条件，当同色系声望达到10积分，游戏结束")})),clickSelector(".cards-title",(function(e){renderMessage("减少购买卡牌的宝石数量")})),clickSelector(".gems-title",(function(e){renderMessage("用来购买卡牌，当宝石总数大于10时，需要丢弃宝石")})),$("body").on("mouseenter",".player-pre-cards .card",(function(e){0!==$(this).closest(".player".concat(usePlayer)).length&&$(this).removeClass("pre-show")})),$("body").on("mouseleave",".player-pre-cards .card",(function(e){0!==$(this).closest(".player".concat(usePlayer)).length&&$(this).addClass("pre-show")})),clickSelector(".drawer-btn",(function(e){toggleDrawer(),e.stopPropagation()})),clickSelector(".chessboard-intro",(function(e){introJs().setOptions({steps:[{element:document.querySelector(".chessboard"),intro:"棋盘, 放置宝石"},{element:document.querySelector('[position="cell-25"].markers'),intro:"宝石, 购买卡牌"},{element:document.querySelector("#marker-22"),intro:"金色宝石可当任意颜色宝石使用。只能通过【预购卡牌】获得。"}]}).start()})),clickSelector(".card-intro",(function(e){introJs().setOptions({steps:[{element:document.querySelector("#cards-container"),intro:"卡牌, 购买后可获得卡牌上方的声望、技能、王冠、宝石"},{element:document.querySelector("#cards-container .show-cards .card .reputation-value"),intro:"声望（0或者更多）"},{element:document.querySelector("#cards-container .show-cards .card .skill"),intro:"技能"},{element:document.querySelector("#cards-container .show-cards .card .crown-container"),intro:"王冠(0～3)"},{element:document.querySelector("#cards-container .show-cards .card .markers-container "),intro:"可抵扣的宝石数量(0~2)"},{element:document.querySelector("#cards-container .show-cards .card .spend-value"),intro:"购买卡牌需要花费的宝石数量"}]}).start()})),clickSelector(".royal-intro",(function(e){toggleDrawer(!0);var r=[{element:document.querySelector(".drawer-content #privilege-container"),intro:"银行所拥有的特权。"},{element:document.querySelector(".drawer-content #royal-cards"),intro:"贵族卡: 当前玩家王冠超过3个或者6个时，会自动触发获取贵族卡。<br/>\n      可从中选1张，将获得其技能和声望。"},{element:document.querySelector(".drawer-content #royal-cards .reputation-value"),intro:"可获得的总声望值。"},{element:document.querySelector(".drawer-content #royal-cards .skill.steal"),intro:"技能：拿取对手一枚宝石。"},{element:document.querySelector(".drawer-content #royal-cards .skill.again"),intro:"技能：再次行动。"},{element:document.querySelector(".drawer-content #royal-cards .skill.privilege"),intro:"技能：获取一枚特权。"}],a=introJs().setOptions({steps:r});a.onexit((function(e){stopRoyalDrawer=!1})),stopRoyalDrawer=!0,setTimeout((function(){a.start()}),510)})),clickSelector(".player-intro",(function(e){var r=[{element:document.querySelector(".player1 .score-container .reputation"),intro:"购买卡牌获得的总声望，达到20分，游戏胜利"},{element:document.querySelector(".player1 .score-container .crown"),intro:"<div>购买卡牌获得的总王冠数量，达到10个，游戏胜利.</div>\n      <div>超过3个或者6个时，会触发获取贵族卡</div>"},{element:document.querySelector(".player1 .score-container .privilege"),intro:"<div>拥有特权的数量。</div>\n              <div>特权来源：<br/>\n              1.对方在强制行动中拿取3个一样颜色的宝石或者2个粉色.<br/>\n              2.对方补充棋盘.<br/>\n              3.卡牌或贵族技能有特权.<br/>\n              满足上述条件中的任意一个，你可以从银行拿取1枚特权，如果银行没有特权，你可以从对方手中拿取。如果对方手中也没有，则无事发生。\n              </div>"},{element:document.querySelector(".player1 .player-reputation"),intro:"任意颜色的声望达到10分，游戏胜利"},{element:document.querySelector(".player1 .player-cards"),intro:"可减少购买卡牌，所花费的宝石"},{element:document.querySelector(".player1 .player-gems"),intro:"当前手上持有的宝石数量, 超过10个需要丢弃"}];introJs().setOptions({steps:r}).start()})),clickSelector(".action-intro",(function(e){if("none"!==$(".coercion-action").css("display")&&"none"===$(".opt.last").css("display"))return renderMessage("已填充宝石的情况下，暂不支持新手指引");var r=[{element:document.querySelector(".optional-action"),intro:"可选行动:【使用特权】【补充棋盘】可以不操作。"},{element:document.querySelector(".opt-privilege"),intro:"使用特权: 可以从棋盘上拿取除黄金宝石外的任意宝石。可执行多次"},{element:document.querySelector(".opt-fill"),intro:"补充棋盘: 将【银行宝石】按照从棋盘中间箭头开始的顺序随机铺满。操作后对方玩家会获得1特权，且进入强制行动。"},{element:document.querySelector(".opt.jump"),intro:"跳过可选行动"},{element:document.querySelector(".coercion-action"),intro:"强制行动: 【拿取宝石】【预购卡牌】【购买卡牌】必须选1个行动"},{element:document.querySelector(".pick-gem"),intro:"拿取宝石：可以从棋盘上拿取【横竖斜】不间断的至多3个宝石，不包括【黄金】宝石。"},{element:document.querySelector(".pre-card"),intro:"预购卡牌：可以拿一张非预购卡牌+一颗黄金宝石。<br/>\n        作用：无法被对方玩家购买和看见，最多拿3张预购卡牌。<br/>\n        注意：正面/背面展示的卡牌都可以预购。"},{element:document.querySelector(".buy-card"),intro:"购买卡牌：可以购买桌面上展示的卡牌+您自己的预购卡牌"},{element:document.querySelector(".opt.last"),intro:"如果无法执行强制行动或者想进行可选行动操作，点击返回"}],a=introJs().setOptions({steps:r});a.onbeforechange((function(e){var r=a._currentStep;r>3?"none"!==$(".optional-action").css("display")&&$(".opt.jump").trigger("click"):r<=3&&"none"!==$(".coercion-action").css("display")&&$(".opt.last").trigger("click")})).oncomplete((function(){$(".opt.last").trigger("click")})),a.start()})),clickSelector(".rule-intro .title",(function(e){var r=$(".rule-intro .content");r.hasClass("active")?r.removeClass("active"):r.addClass("active")})),$(document).click((function(){stopRoyalDrawer||"matrix(1, 0, 0, 1, 0, 0)"===$(".drawer-container").css("transform")&&closeDrawer()})),init();